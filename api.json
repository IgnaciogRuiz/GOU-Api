{
    "openapi": "3.1.0",
    "info": {
        "title": "GOU RESTful API",
        "version": "1.0.0",
        "description": "API p\u00fablica para el backend de la aplicaci\u00f3n m\u00f3vil **GOU!**, una plataforma de carpooling desarrollada en Argentina.\n\nEsta API provee endpoints RESTful para:\n\n- Registro, login y validaci\u00f3n de identidad (incluyendo verificaci\u00f3n de DNI).\n- Creaci\u00f3n, edici\u00f3n y eliminaci\u00f3n de viajes.\n- Gesti\u00f3n de usuarios, veh\u00edculos y pasajeros.\n- Solicitudes y confirmaciones de viaje.\n- Seguridad y autenticaci\u00f3n basada en tokens Bearer.\n\nTodos los endpoints est\u00e1n versionados y requieren autorizaci\u00f3n mediante `Authorization: Bearer {token}` salvo los p\u00fablicos (como registro e inicio de sesi\u00f3n)."
    },
    "servers": [
        {
            "url": "http://localhost/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "operationId": "login",
                "description": "Esta ruta maneja las peticiones entrantes de autenticacion. No requiere BearerToken",
                "summary": "Login Request",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "user_id",
                                        "token"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                },
                "security": []
            }
        },
        "/auth/forgot-password": {
            "post": {
                "operationId": "password.email",
                "description": "Esta ruta solicita un link para restablecer la contrase\u00f1a del usuario(mail)",
                "summary": "Password reset link Request",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/reset-password": {
            "post": {
                "operationId": "password.store",
                "description": "Esta ruta se solicita a partir del password reset link request. solicita el token desde la url, el mail y la nueva contrase\u00f1a.",
                "summary": "Reset Password Request",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "operationId": "logout",
                "description": "Destruye el BearerToken de la session.",
                "summary": "Logout Request",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/commissions": {
            "get": {
                "operationId": "commissions.index",
                "description": "Esta ruta nos trae la comision de la empresa.",
                "summary": "Show Commission",
                "tags": [
                    "Commission"
                ],
                "responses": {
                    "200": {
                        "description": "`CommissionCollection`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "commissions.store",
                "description": "Esta ruta nos permite crear una nueva comission.",
                "summary": "Create Commission",
                "tags": [
                    "Commission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommissionStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CommissionResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CommissionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/graphql": {
            "get": {
                "operationId": "graphql",
                "tags": [
                    "GraphQL"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register/verify-email": {
            "post": {
                "operationId": "registerVerification.verifyEmail",
                "description": "Esta ruta se encarga de verificar si el email ingresado ya esta en uso, si no esta en uso envia codigo para verificarlo.",
                "summary": "Verify Email Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "C\u00f3digo enviado al correo"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register/verify-phone": {
            "post": {
                "operationId": "registerVerification.verifyPhone",
                "description": "Esta ruta se encarga de verificar si el telefono ingresado ya esta en uso, si no esta en uso envia codigo para verificarlo. Falta terminar la funcion para que envie el sms",
                "summary": "Verify Phone Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "phone"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Enviar SMS con Twilio (todavia no funca)\n$twilio = new Client(env('TWILIO_SID'), env('TWILIO_AUTH_TOKEN'));\n$twilio->messages->create($phone, [\n'from' => env('TWILIO_PHONE_NUMBER'),\n'body' => \"Tu c\u00f3digo de verificaci\u00f3n es: $phoneCode\"\n]);",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "C\u00f3digo enviado"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register/verify-email-token": {
            "post": {
                "operationId": "registerVerification.verifyEmailToken",
                "description": "Esta ruta verifica que el token ingresado proviene del mail asi dando el \"ok\" para utilizarlo en Registration Request.",
                "summary": "Verify Email Token Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verificado correctamente"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register/verify-phone-token": {
            "post": {
                "operationId": "registerVerification.verifyPhoneToken",
                "description": "Esta ruta verifica que el token ingresado proviene del telefono asi dando el \"ok\" para utilizarlo en Registration Request.",
                "summary": "Verify Phone Token Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "phone",
                                    "code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tel\u00e9fono verificado correctamente"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register/verify-identity": {
            "post": {
                "operationId": "registerVerification.verifyIdentity",
                "description": "Esta ruta verifica que la identidad del usuario mediante la API de renaper asi dando el \"ok\" para utilizarlo en Registration Request. FALTA TERMINARLA",
                "summary": "Verify Identity Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dni": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "dni"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Identidad verificada"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register/verify-password": {
            "post": {
                "operationId": "registerVerification.verifyPassword",
                "description": "Esta ruta verifica que la contrase\u00f1a cumple con las validaciones necesarias asi dando el \"ok\" para utilizarlo en Registration Request.",
                "summary": "Verify Password Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contrase\u00f1a v\u00e1lida"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/auth/register": {
            "post": {
                "operationId": "register",
                "description": "Esta ruta se encarga de manejar las solicitudes de registro. Posterior a ellas existen las RegisterVerifications para ahorrar error en la request.",
                "summary": "Registration Request",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dni": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "photo": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 2048
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "cvu": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 50
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "dni",
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario creado correctamente"
                                        },
                                        "user": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user",
                                        "path"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "CommissionCollection": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionResource"
                        }
                    }
                },
                "required": [
                    "data"
                ],
                "title": "CommissionCollection"
            },
            "CommissionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ],
                "title": "CommissionResource"
            },
            "CommissionStoreRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "CommissionStoreRequest"
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "dni": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "device_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "dni",
                    "password",
                    "device_name"
                ],
                "title": "LoginRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}