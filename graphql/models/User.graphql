type User @guard {
    id: ID!
    dni: String!
    profile_photo: String @field(resolver: "App\\GraphQL\\Queries\\UserQuery@userPhoto")
    firstname: String!
    lastname: String!
    email: String!
    phone: String!
    validated: Boolean!
    cvu: String!
    pending_balance: String!
    created_at: DateTime!
    ratingRatio: Float! @field(resolver: "App\\GraphQL\\Queries\\RatingQuery@userRatingRatio")
    vehicles: [Vehicle!]! @hasMany
    reservations: [Reservation!]! @hasMany
    transactions: [Transaction!]! @hasMany
    chats: [Chat!]! @field(resolver: "App\\GraphQL\\Queries\\ChatQuery@userChats")
    messages: [Message!]! @hasMany
    ratings: [Rating!]! @hasMany
    driverBlocks: [DriverBlock!]! @hasMany
}

extend type User @guard {
  travelStats: TravelStats! @field(resolver: "App\\GraphQL\\Queries\\TripQuery@userTravelStats")
}

type TravelStats {
  totalTrips: Int!
  publishedTrips: Int!
  reservedTrips: Int!
  totalDistanceKm: Float!
}

input UploadProfilePhotoInput {
  photo: Upload!
}
